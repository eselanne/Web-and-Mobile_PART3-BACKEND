{"version":3,"sources":["components/AddReminder.js","components/Reminder.js","components/Reminders.js","components/App.js","index.js"],"names":["AddReminders","props","style","paddingTop","paddingRight","paddingLeft","padding","backgroundColor","borderRadius","onSubmit","propsi","addReminder","width","id","value","state","newReminder","newname","onChange","handleNameChange","type","newtime","handleTimeChange","border","deleteReminder","refresh","window","confirm","axios","delete","then","response","Reminder","content","name","Date","timestamp","toLocaleDateString","toLocaleTimeString","onClick","Reminders","textAlign","zIndex","reminders","map","entry","refreshData","App","event","preventDefault","console","log","some","element","alert","reminderObject","post","setState","prevState","data","catch","e","target","document","getElementById","get","AddReminder","this","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.bd4d0344.chunk.js","sourcesContent":["\r\nconst AddReminders = (props) => {\r\n    return (\r\n        //\r\n        <div>\r\n            <div style={{ paddingTop: \"5%\", paddingRight: \"40%\", paddingLeft: \"40%\" }} >\r\n                <h2 style={{ paddingLeft: \"26%\" }}>Add Reminder</h2>\r\n                <form style={{ padding: \"10px\", backgroundColor: \"rgba(255,255,255,0.6\", borderRadius: \"20px\", }} onSubmit={props.propsi.addReminder}>\r\n                    <div style={{ padding: \"5px\" }}>\r\n                        Name: <input\r\n                            style={{ width: \"95%\" }}\r\n                            id=\"nameInput\"\r\n                            value={props.propsi.state.newReminder.newname}\r\n                            onChange={props.propsi.handleNameChange} />\r\n                    </div>\r\n                    <div style={{ padding: \"5px\" }}>\r\n                        At time: <input\r\n                            style={{ width: \"96%\" }}\r\n                            type=\"datetime-local\"\r\n                            id=\"dateInput\"\r\n                            value={props.propsi.state.newReminder.newtime}\r\n                            onChange={props.propsi.handleTimeChange} />\r\n                    </div>\r\n                    <div style={{ padding: \"6px\" }}>\r\n                        <button type=\"submit\" style={{ padding: \"10px\", width: \"20%\", border: \"none\", borderRadius: \"20px\", backgroundColor: '#79D0F5' }}>Add</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddReminders","import axios from 'axios'\r\n\r\n//Reminder-komponentti\r\nconst Reminder = (props) => {\r\n\r\n    return (\r\n        <div style={{ paddingTop: \"1px\" }}>\r\n            <table style={{ width: \"100%\" }}>\r\n                <tbody style={{}}>\r\n                    <tr>\r\n                        <td style={{ width: \"50%\" }}>Topic: {props.content.name} </td>\r\n                        <td style={{ width: \"25%\" }}>Date: {(new Date(props.content.timestamp)).toLocaleDateString()} {(new Date(props.content.timestamp)).toLocaleTimeString()}</td>\r\n                        <td style={{ width: \"5%\" }}> <button style={{ padding: \"8px\", border: \"none\", borderRadius: \"20px\", backgroundColor: '#F58167' }} onClick={() => deleteReminder(props.content.id, props.refresh)}>Delete</button></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div >\r\n    )\r\n}\r\n\r\n//Poistaa objektin palvelimelta ja sen jälkeen päivittää clientin näkymän ajantasaiseksi\r\nconst deleteReminder = (id, refresh) => {\r\n    if (window.confirm(\"Do you really want to delete this reminder?\")) {\r\n        axios.delete('https://boiling-ocean-43087.herokuapp.com/api/reminders/' + id).then(response => {\r\n            refresh()\r\n        })\r\n    }\r\n}\r\n\r\nexport default Reminder","import Reminder from './Reminder'\r\n\r\nconst Reminders = (props) => {\r\n    return (\r\n\r\n        <div style={{ paddingTop: \"2%\", paddingRight: \"30%\", paddingLeft: \"30%\" }}>\r\n            <h2 style={{ textAlign: 'center' }}>Reminders:</h2>\r\n            <div style={{ padding: \"10px\", backgroundColor: \"rgba(255,255,255,0.6\", borderRadius: \"20px\" }}>\r\n                <div style={{ zIndex: \"3\" }}>\r\n                    {props.propsi.state.reminders.map(entry => <Reminder key={entry.id} content={entry} refresh={props.propsi.refreshData} />)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Reminders","import axios from 'axios';\r\nimport React from 'react';\r\nimport AddReminders from './AddReminder';\r\nimport Reminders from './Reminders'\r\n\r\nconst baseUrl = '/api/reminders'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            reminders: [],\r\n            newReminder: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://boiling-ocean-43087.herokuapp.com/api/reminders/')\r\n            .then(response => {\r\n                this.setState({ reminders: response.data })\r\n            })\r\n    }\r\n\r\n    // Lisää reminder\r\n    addReminder = (event) => {\r\n\r\n        event.preventDefault()\r\n        console.log(this.state)\r\n\r\n        //Check if reminder already exists\r\n        const check = (element) => element.name === this.state.newname;\r\n        if (this.state.reminders.some(check)) {\r\n            alert(\"Error! Reminder already exists.\")\r\n            return;\r\n        }\r\n\r\n        const reminderObject = {\r\n            name: this.state.newname,\r\n            timestamp: this.state.newtime,\r\n        }\r\n\r\n        //POST\r\n        axios.post('https://boiling-ocean-43087.herokuapp.com/api/reminders/', reminderObject)\r\n            .then(response => {\r\n                this.setState((prevState) => ({\r\n                    reminders: [...prevState.reminders, response.data],\r\n                }))\r\n            }).catch(e => {\r\n                console.log(\"Posti: \" + e);\r\n            })\r\n\r\n        console.log(event.target)\r\n\r\n        document.getElementById('nameInput').value = ''\r\n        document.getElementById('dateInput').value = ''\r\n\r\n    }\r\n\r\n    //Handle name change\r\n    handleNameChange = (event) => {\r\n        console.log(event.target.value)\r\n        this.setState({ newname: event.target.value })\r\n    }\r\n\r\n    //Handle time change\r\n    handleTimeChange = (event) => {\r\n        console.log(event.target.value)\r\n        this.setState({ newtime: event.target.value })\r\n    }\r\n\r\n    //lataa päivitetty JSON-tiedosto ja päivitetään (käytetään poiston yhteydessä)\r\n    refreshData = (event) => {\r\n        axios.get('https://boiling-ocean-43087.herokuapp.com/api/reminders/').then(response => {\r\n            this.setState({\r\n                reminders: response.data,\r\n            })\r\n        }).catch(e => {\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AddReminders propsi={this} />\r\n                <Reminders propsi={this} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}